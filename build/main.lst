     1                                  ; x86 Assembly
     2                                  
     3                                  section .data
     4 00000000 257300                          str_fmt_s: db "%s", 0
     5 00000003 25730A00                        str_fmt_p: db "%s", 10, 0
     6 00000007 256C6400                        dec_fmt_s: db "%ld", 0
     7 0000000B 256C640A00                      dec_fmt_p: db "%ld", 10, 0
     8 00000010 00                              customer_name: db "", 0
     9                                  section .bss
    10                                  section .text
    11                                          extern scanf
    12                                          extern printf
    13                                  
    14                                  %macro log_i64 1
    15                                          lea rdi, [dec_fmt_p]
    16                                          mov rsi, %1
    17                                          xor eax, eax
    18                                          call printf
    19                                  %endmacro
    20                                  
    21                                  %macro log_str 1
    22                                          lea rdi, [str_fmt_p]
    23                                          lea rsi, %1
    24                                          xor eax, eax
    25                                          call printf
    26                                  %endmacro
    27                                  
    28                                  %macro read_i64 1
    29                                          lea rdi, [dec_fmt_s]
    30                                          lea rsi, %1
    31                                          xor eax, eax
    32                                          call scanf
    33                                  %endmacro
    34                                  
    35                                  %macro read_str 1
    36                                          lea rdi, [str_fmt_s]
    37                                          lea rsi, %1
    38                                          xor rax, rax
    39                                          call scanf
    40                                  %endmacro
    41                                  
    42                                  global cost
    43                                  cost:
    44 00000000 4881FFE8030000                  cmp rdi, 1000
    45 00000007 7E1F                            jle .le1000
    46 00000009 BE14000000                      mov rsi, 20
    47 0000000E 480FAFF7                        imul rsi, rdi
    48 00000012 4881EFE8030000                  sub rdi, 1000
    49 00000019 4889F8                          mov rax, rdi
    50 0000001C BF64000000                      mov rdi, 100
    51 00000021 48F7FF                          idiv rdi
    52 00000024 4801F0                          add rax, rsi            
    53 00000027 C3                              ret
    54                                  
    55                                  .le1000:
    56 00000028 4889F8                          mov rax, rdi
    57 0000002B 486BC014                        imul rax, 20
    58 0000002F BA00000000                      mov edx, 0                      ; In cents, if needed
    59 00000034 C3                              ret
    60                                  
    61                                  global main
    62                                  main:
    63 00000035 55                              push rbp
    64 00000036 4889E5                          mov rbp, rsp
    65 00000039 4883EC10                        sub rsp, 16
    66                                  
    67                                          read_str [customer_name]        ; Get customer's name
    36 0000003D 488D3C25[00000000]  <1>  lea rdi, [str_fmt_s]
    37 00000045 488D3425[10000000]  <1>  lea rsi, %1
    38 0000004D 4831C0              <1>  xor rax, rax
    39 00000050 E8(00000000)        <1>  call scanf
    68                                          read_i64 qword [rbp-8]          ; Get customer's electric usage
    29 00000055 488D3C25[07000000]  <1>  lea rdi, [dec_fmt_s]
    30 0000005D 488D75F8            <1>  lea rsi, %1
    31 00000061 31C0                <1>  xor eax, eax
    32 00000063 E8(00000000)        <1>  call scanf
    69                                  
    70 00000068 488B7DF8                        mov rdi, qword [rbp-8]
    71 0000006C E88FFFFFFF                      call cost
    72 00000071 488945F8                        mov qword [rbp-8], rax 
    73 00000075 488955F0                        mov qword [rbp-16], rdx
    74                                  
    75                                          log_str [customer_name]         ; Print customer's name
    22 00000079 488D3C25[03000000]  <1>  lea rdi, [str_fmt_p]
    23 00000081 488D3425[10000000]  <1>  lea rsi, %1
    24 00000089 31C0                <1>  xor eax, eax
    25 0000008B E8(00000000)        <1>  call printf
    76                                          log_i64 qword [rbp-8]           ; Print the amount of dollars 
    15 00000090 488D3C25[0B000000]  <1>  lea rdi, [dec_fmt_p]
    16 00000098 488B75F8            <1>  mov rsi, %1
    17 0000009C 31C0                <1>  xor eax, eax
    18 0000009E E8(00000000)        <1>  call printf
    77                                          log_i64 qword [rbp-16]          ; Print the amount of cents
    15 000000A3 488D3C25[0B000000]  <1>  lea rdi, [dec_fmt_p]
    16 000000AB 488B75F0            <1>  mov rsi, %1
    17 000000AF 31C0                <1>  xor eax, eax
    18 000000B1 E8(00000000)        <1>  call printf
    78                                  
    79 000000B6 C9                              leave
    80 000000B7 B83C000000                      mov rax, 60
    81 000000BC BF00000000                      mov rdi, 0
    82 000000C1 0F05                            syscall
