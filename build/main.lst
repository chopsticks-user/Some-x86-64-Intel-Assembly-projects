     1                                  ; x86 Assembly
     2                                  
     3                                  section .data
     4 00000000 256C640A00                      dec_fm_p: db "%ld", 0xa, 0
     5 00000005 256C6400                        dec_fm_s: db "%ld", 0
     6                                  section .bss
     7                                  section .text
     8                                          extern scanf
     9                                          extern printf
    10                                  
    11                                  %macro log_i64 1
    12                                          lea rdi, [dec_fm_p]
    13                                          mov rsi, %1
    14                                          xor eax, eax
    15                                          call printf
    16                                  %endmacro
    17                                  
    18                                  %macro read_i64 1
    19                                          lea rdi, [dec_fm_s]
    20                                          lea rsi, %1
    21                                          xor eax, eax
    22                                          call scanf
    23                                  %endmacro
    24                                  
    25                                  %macro exit_64 1
    26                                          mov rax, 60
    27                                          mov rdi, %1
    28                                          syscall
    29                                  %endmacro
    30                                  
    31                                  global factorial
    32                                  factorial:
    33 00000000 83FF01                          cmp edi, 1
    34 00000003 7E18                            jle .case01
    35 00000005 B802000000                      mov eax, 2
    36 0000000A 89F9                            mov ecx, edi
    37 0000000C EB06                            jmp .loop_cond          ; n >= 2
    38                                  
    39                                  .loop_exec:
    40 0000000E 480FAFC1                        imul rax, rcx
    41 00000012 FFC9                            dec ecx
    42                                  
    43                                  .loop_cond:
    44 00000014 83F902                          cmp ecx, 2
    45 00000017 7FF5                            jg .loop_exec
    46 00000019 C3                              ret
    47                                  
    48                                  .case_neg:
    49 0000001A 31C0                            xor eax, eax            ; return 0 if n < 0
    50 0000001C C3                              ret
    51                                  
    52                                  .case01:
    53 0000001D 83FF00                          cmp edi, 0              ; return 1 if n > 0 && n <= 1
    54 00000020 7CF8                            jl .case_neg
    55 00000022 B801000000                      mov eax, 1
    56 00000027 C3                              ret
    57                                  
    58                                  global main
    59                                  main:
    60 00000028 55                              push rbp
    61 00000029 4889E5                          mov rbp, rsp
    62 0000002C 4883EC10                        sub rsp, 16
    63                                  
    64                                          read_i64 qword [rbp-8]
    19 00000030 488D3C25[05000000]  <1>  lea rdi, [dec_fm_s]
    20 00000038 488D75F8            <1>  lea rsi, %1
    21 0000003C 31C0                <1>  xor eax, eax
    22 0000003E E8(00000000)        <1>  call scanf
    65                                  
    66 00000043 488B7DF8                        mov rdi, qword [rbp-8]
    67 00000047 E8B4FFFFFF                      call factorial
    68                                  
    69                                          log_i64 rax
    12 0000004C 488D3C25[00000000]  <1>  lea rdi, [dec_fm_p]
    13 00000054 4889C6              <1>  mov rsi, %1
    14 00000057 31C0                <1>  xor eax, eax
    15 00000059 E8(00000000)        <1>  call printf
    70                                  
    71 0000005E C9                              leave
    72                                          exit_64 0
    26 0000005F B83C000000          <1>  mov rax, 60
    27 00000064 BF00000000          <1>  mov rdi, %1
    28 00000069 0F05                <1>  syscall
