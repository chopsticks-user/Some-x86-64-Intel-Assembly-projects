     1                                  ; x86_64 Intel Assembly
     2                                  
     3                                  %macro define_normal_func_stack 0
     4                                          push rbp
     5                                          mov rbp, rsp
     6                                  %endmacro
     7                                  
     8                                  %macro clean_normal_func_stack 0
     9                                          pop rbp
    10                                          ret
    11                                  %endmacro
    12                                  
    13                                  section .data
    14                                  section .bss
    15                                  section .text
    16                                          global _start
    17                                          global _x86_64_as_add_2_nums
    18                                          global _x86_64_as_sub_2_nums
    19                                          global _x86_64_as_mul_2_nums
    20                                          global _x86_64_as_div_2_nums
    21                                  
    22                                  _x86_64_as_add_2_nums:
    23 00000000 01F8                            add eax, edi
    24 00000002 C3                              ret
    25                                  
    26                                  _x86_64_as_sub_2_nums:
    27 00000003 29F8                            sub eax, edi
    28 00000005 C3                              ret
    29                                  
    30                                  _x86_64_as_mul_2_nums:
    31 00000006 55                              push rbp
    32 00000007 4889E5                          mov rbp, rsp
    33                                  
    34 0000000A 897DFC                          mov dword [rbp-4], edi
    35 0000000D 8975F8                          mov dword [rbp-8], esi
    36 00000010 8B45FC                          mov eax, dword [rbp-4]
    37 00000013 0FAF45F8                        imul eax, dword [rbp-8]
    38                                  
    39 00000017 5D                              pop rbp
    40 00000018 C3                              ret
    41                                  
    42                                  _x86_64_as_div_2_nums:
    43 00000019 55                              push rbp
    44 0000001A 4889E5                          mov rbp, rsp
    45                                  
    46 0000001D 897DFC                          mov dword [rbp-4], edi
    47 00000020 8975F8                          mov dword [rbp-8], esi
    48 00000023 8B45FC                          mov eax, dword [rbp-4]
    49 00000026 99                              cdq
    50 00000027 F77DF8                          idiv dword [rbp-8]
    51                                  
    52 0000002A 5D                              pop rbp
    53 0000002B C3                              ret
    54                                  
    55                                  _x86_64_as_mod_2_nums:
    56                                          ; push rbp
    57                                          ; mov rbp, rsp
    58                                          define_normal_func_stack
     4 0000002C 55                  <1>  push rbp
     5 0000002D 4889E5              <1>  mov rbp, rsp
    59                                  
    60 00000030 897DFC                          mov dword [rbp-4], edi
    61 00000033 8975F8                          mov dword [rbp-8], esi
    62 00000036 8B45FC                          mov eax, dword [rbp-4]
    63 00000039 99                              cdq
    64 0000003A F77DF8                          idiv dword [rbp-8]
    65 0000003D 89D0                            mov eax, edx
    66                                  
    67                                          clean_normal_func_stack
     9 0000003F 5D                  <1>  pop rbp
    10 00000040 C3                  <1>  ret
    68                                          ; pop rbp
    69                                          ; ret
    70                                  
    71                                  _start:
    72 00000041 BF48000000                      mov edi, 72
    73 00000046 BE41000000                      mov esi, 65
    74 0000004B E8DCFFFFFF                      call _x86_64_as_mod_2_nums
    75                                  
    76 00000050 B83C000000                      mov eax, 60
    77 00000055 31FF                            xor edi, edi
    78 00000057 0F05                            syscall
